module GitSsh
  class Hook
    KEY_PREFIX = %[command="git-ssh %u",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty]
    def initialize(path)
      @path = path
    end

    def files
      Dir["keydir/*/*.pub"].map do |pubkey|
	pubkey =~ %r[((\w+)/[^/]+\.pub)]
	[$2, $1]
      end
    end

    def write_authorized_keyfile
      File.open File.expand_path("~/.ssh/authorized_keys"), 'w' do |f|
	f.puts "# DO NOT EDIT! File autogenerated by git-ssh"
	files.each do |user, file|
	  key = File.read(File.join(Dir.pwd, 'keydir', file))
	  key_prefix = KEY_PREFIX.gsub('%u', user)
	  f.puts [key_prefix, key].join
	end
      end
    end

    def run
      if files.empty? && !@path.match(/\.git$/)
	puts "Is this a git repository ?"
	exit 1
      end
      in_temp_dir do
	write_authorized_keyfile
      end
    end

    def in_temp_dir(&blk)
      temp_dir = File.join(@path, 'tempdir')
      # fork
      system "git", "clone", @path, temp_dir
      Dir.chdir temp_dir, &blk
    ensure
      FileUtils.rm_rf temp_dir
    end
  end
end

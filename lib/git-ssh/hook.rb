module GitSsh
  class Hook
    KEY_PREFIX = %[command="git-ssh %u -r %d",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty]
    def initialize(path)
      @path = path
    end

    def write_keys(tree, f)
      f.puts "# DO NOT EDIT! File autogenerated by git-ssh"
      each_key(tree) do |user, content|
	key_prefix = KEY_PREFIX.gsub('%u', user).gsub('%d', File.dirname(@path))
	f.puts [key_prefix, content] * ' '
      end
    end

    def each_key(tree)
      tree.subtrees.keys.sort.each do |user|
	tree.subtrees[user].blobs.each do |name, blob|
	  next unless name.match(/\.pub$/)
	  yield user, blob.contents
	end
      end
    end

    def run
      if !@path.match(/\.git$/)
	puts "Is this a git repository ?"
	exit 1
      end
      require 'git'
      g = Git.bare(@path)
      t = g.gtree('HEAD^{tree}')
      t = t.subtrees["keydir"]
      File.open File.expand_path("~/.ssh/authorized_keys"), 'w' do |f|
	write_keys(t, f)
      end
    end

  end
end
